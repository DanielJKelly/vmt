import React, { Component } from 'react';
import classes from './Log.Styles.css';
import moment from 'moment';
class Log extends Component {
  constructor(props){
    super(props)
    this.focusedEntry = React.createRef();

  }

  componentDidUpdate(prevProps){
    console.log("LOG UPDATED")
    this.focusedEntry.current.scrollIntoView({ behavior: "smooth" });
  }


  render() {
    console.log('rendering log')
    console.log(this.props.log)
    return (
      <div className={classes.Log}>
        {
          this.props.log.map((event, i) => {
            let entry;
            if (event.text) {
              entry = <div>
                <div>{moment.unix(event.timestamp/1000).format('MM/DD/YYYY h:mm:ss A')}</div>
                {event.autogenerated ?
                  <div>{event.text}</div> : <div>{event.user.username}: {event.text}</div>
                }
              </div>
            }
            else if (event.synthetic) {
              entry = <div>{event.message}</div>
            } else {
              entry = <div>
                <div>{moment.unix(event.timestamp/1000).format('MM/DD/YYYY h:mm:ss A')}</div>
                <div>{event._id} by {event.user}</div>
              </div>
            }
            if (i === this.props.currentIndex) {
              console.log('adding a ref to element: ', i)
              return <div ref={this.focusedEntry} className={classes.Entry} style={{color: 'red'}} key={i}>{entry}</div>
            } else {
              return <div className={classes.Entry} style={{color: 'red'}} key={i}>{entry}</div>
            }
          })
        }
      </div>
    )
  }
}

export default Log;
