import React from 'react';
import PropTypes from 'prop-types';
import moment from 'moment';
import classes from './chat.css';

const Message = React.forwardRef((props, ref) => {
  const { message, click, highlighted, id, referencing, reference } = props;
  let highlightClass = '';
  let referenceClass = '';
  if (highlighted) {
    highlightClass = classes.Highlight;
  }
  if (reference) {
    referenceClass = classes.Reference;
  }
  if (message) {
    return (
      <div
        id={message._id}
        data-testid={message._id}
        key={id}
        ref={ref}
        className={[
          message.autogenerated ? classes.VmtBotEntry : classes.Entry,
          referenceClass,
          highlightClass,
        ].join(' ')}
        onClick={click}
        onKeyPress={click}
        tabIndex="-1"
        role="button"
        style={{
          cursor: message.reference || referencing ? 'pointer' : 'auto',
          color: message.color,
        }}
      >
        <div>
          <b>{message.autogenerated ? 'VMTbot' : message.user.username}: </b>
          <span>{message.text}</span>
        </div>
        {/* CONSIDER CONDITIONALLLY FORMATIING THE DATE BASED ON HOW FAR IN THE PAST IT IS
              IF IT WAS LAST WEEK, SAYING THE DAY AND TIME IS MISLEADING */}
        <div className={classes.Timestamp}>
          {moment.unix(message.timestamp / 1000).format('ddd h:mm:ss a')}
        </div>
      </div>
    );
  }
  return null;
});

Message.propTypes = {
  message: PropTypes.shape({}).isRequired,
  click: PropTypes.func.isRequired,
  highlighted: PropTypes.bool,
  id: PropTypes.string.isRequired,
  referencing: PropTypes.bool,
  reference: PropTypes.bool.isRequired,
};

Message.defaultProps = {
  highlighted: false,
  referencing: false,
};
export default Message;
